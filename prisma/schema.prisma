generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum investment_type {
  BUY
  SELL
}

enum transaction_type {
  DEPOSIT
  WITHDRAWAL
}

model Client {
  id String @id @default(cuid())

  name     String @db.VarChar(255)
  email    String @unique @db.VarChar(255)
  password String @db.VarChar(255)

  Account Account?

  @@map("clients")
}

model Account {
  id String @id @default(cuid())

  client_id String @unique

  available_balance Decimal  @default(0) @db.Decimal(10, 2)
  investments_value Decimal  @default(0) @db.Decimal(10, 2)
  total_assets      Decimal  @default(0) @db.Decimal(10, 2)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  transactions Transaction_history[]
  investments  Investments_history[]
  portfolio    Portfolio[]

  client Client @relation(fields: [client_id], references: [id])

  @@map("accounts")
}

model Transaction_history {
  id Int @id @default(autoincrement())

  account_id String

  value            Decimal          @db.Decimal(10, 2)
  transaction_type transaction_type
  created_at       DateTime         @default(now())

  Account Account @relation(fields: [account_id], references: [id])

  @@map("transactions_history")
}

model Asset {
  id Int @id @default(autoincrement())

  symbol             String  @db.VarChar(10)
  name               String  @db.VarChar(255)
  available_quantity Int
  price              Decimal @db.Decimal(10, 2)

  investments_history Investments_history[]
  portfolio           Portfolio[]

  @@map("assets")
}

model Investments_history {
  id Int @id @default(autoincrement())

  account_id String
  asset_id   Int

  investment_type investment_type
  quantity        Int
  price           Decimal         @db.Decimal(10, 2)
  created_at      DateTime        @default(now())

  Asset   Asset?   @relation(fields: [asset_id], references: [id])
  Account Account? @relation(fields: [account_id], references: [id])

  @@map("investments_history")
}

model Portfolio {
  id Int @id @default(autoincrement())

  account_id String
  asset_id   Int

  symbol                   String   @db.VarChar(10)
  quantity                 Int
  average_purchase_price   Decimal  @db.Decimal(10, 2)
  acquisition_value        Decimal  @db.Decimal(10, 2)
  current_value            Decimal  @db.Decimal(10, 2)
  profitability_percentage Decimal  @db.Decimal(10, 2) @default(0)
  profitability_value      Decimal  @db.Decimal(10, 2) @default(0)
  created_at               DateTime @default(now())
  updated_at               DateTime @updatedAt

  Asset   Asset?   @relation(fields: [asset_id], references: [id])
  Account Account? @relation(fields: [account_id], references: [id])

  @@unique([account_id, asset_id])
  @@map("portfolio")
}
